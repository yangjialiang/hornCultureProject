{"version":3,"sources":["webpack:///./node_modules/image-compressor.js/dist/image-compressor.esm.js","webpack:///src/views/post/edit.vue","webpack:///./src/views/post/edit.vue?21c5","webpack:///./src/views/post/edit.vue"],"names":["canvasToBlob","fn","module","exports","createCommonjsModule","window","CanvasPrototype","HTMLCanvasElement","prototype","hasBlobConstructor","Blob","Boolean","e","hasArrayBufferViewSupport","Uint8Array","size","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","dataURIPattern","dataURLtoBlob","atob","ArrayBuffer","dataURI","matches","mediaType","isBase64","dataString","byteString","arrayBuffer","intArray","i","bb","match","Error","slice","length","decodeURIComponent","charCodeAt","type","append","getBlob","toBlob","mozGetAsFile","callback","quality","self","this","setTimeout","toDataURL","image_compressor_esm_toString","Object","toString","DEFAULTS","checkOrientation","maxWidth","Infinity","maxHeight","minWidth","minHeight","width","undefined","height","mimeType","convertSize","beforeDraw","drew","success","error","REGEXP_IMAGE_TYPE","isImageType","value","test","fromCharCode","String","btoa","getOrientation","dataView","DataView","orientation","littleEndian","app1Start","ifdStart","getUint8","byteLength","offset","tiffOffset","start","str","getStringFromCharCode","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","REGEXP_DECIMALS","normalizeDecimalNumber","times","arguments","Math","round","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","_extends","assign","source","hasOwnProperty","call","_window$1","ArrayBuffer$1","FileReader","URL","webkitURL","REGEXP_EXTENSION","image_compressor_esm","ImageCompressor","file","options","result","compress","_this","image","Image","Promise","resolve","reject","x","url","createObjectURL","reader","onload","_ref","uint8","data","forEach","arrayBufferToDataURL","rotate","scaleX","scaleY","parseOrientation","onabort","onerror","readAsArrayBuffer","readAsDataURL","then","naturalWidth","naturalHeight","alt","name","src","_ref2","_ref2$rotate","_ref2$scaleX","_ref2$scaleY","canvas","document","createElement","context","getContext","aspectRatio","max","destX","min","destY","destWidth","destHeight","abs","_width$height","defaultFillStyle","fillStyle","fillRect","save","translate","PI","scale","drawImage","floor","restore","done","_ref3","revokeObjectURL","date","Date","lastModified","getTime","lastModifiedDate","replace","includeDot","extension","substr","imageTypeToExtension","catch","err","components","FixedLayout","fixed_layout","FileImage2","file_image2","myPreimg","myContent","watch","computed","extends_default","vuex_esm","tagId","state","write","post","clubId","content","created","init","mounted","methods","push","initData","handNext","$store","commit","$actionType","set_post_data","preimg","res","params","cont","$http","$port","POST_DISCUSS","$qs","stringify","code","alert","$router","path","uploadImg","_this2","promise_default","a","formData","FormData","UPLOAD_IMG","console","log","message","handLoadImg","item","handDeleteImage","index","post_edit","render","_vm","_h","$createElement","_c","_self","staticStyle","background","attrs","title","slot","to","icon","on","click","$event","go","_v","placeholder","rows","model","$$v","expression","staticClass","_l","$index","load","delete","staticRenderFns","Component","__webpack_require__","normalizeComponent","edit","ssrContext","__webpack_exports__"],"mappings":"oOAcA,IAAAA;;;;;;;;;;AAJA,SAAAC,EAAAC,GACA,OAAgCD,EAAhCC,GAAkBC,YAAcD,EAAAC,SAAAD,EAAAC,QAGhCC,CAAA,SAAAF,IACA,SAAAG,GAEA,IAAAC,EACAD,EAAAE,mBAAAF,EAAAE,kBAAAC,UACAC,EACAJ,EAAAK,MACA,WACA,IACA,OAAAC,QAAA,IAAAD,MACO,MAAAE,GACP,UAJA,GAOAC,EACAJ,GACAJ,EAAAS,YACA,WACA,IACA,iBAAAJ,MAAA,IAAAI,WAAA,OAAAC,KACO,MAAAH,GACP,UAJA,GAOAI,EACAX,EAAAW,aACAX,EAAAY,mBACAZ,EAAAa,gBACAb,EAAAc,cACAC,EAAA,0CACAC,GACAZ,GAAAO,IACAX,EAAAiB,MACAjB,EAAAkB,aACAlB,EAAAS,YACA,SAAAU,GACA,IAAAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGA,KADAR,EAAAD,EAAAU,MAAAd,IAEA,UAAAe,MAAA,oBAkBA,IAfAT,EAAAD,EAAA,GACAA,EAAA,GACA,cAAAA,EAAA,yBACAE,IAAAF,EAAA,GACAG,EAAAJ,EAAAY,MAAAX,EAAA,GAAAY,QAGAR,EAFAF,EAEAL,KAAAM,GAGAU,mBAAAV,GAGAE,EAAA,IAAAP,YAAAM,EAAAQ,QACAN,EAAA,IAAAjB,WAAAgB,GACAE,EAAA,EAAiBA,EAAAH,EAAAQ,OAAuBL,GAAA,EACxCD,EAAAC,GAAAH,EAAAU,WAAAP,GAGA,OAAAvB,EACA,IAAAC,MAAAG,EAAAkB,EAAAD,IACAU,KAAAd,MAGAO,EAAA,IAAAjB,GACAyB,OAAAX,GACAG,EAAAS,QAAAhB,KAEArB,EAAAE,oBAAAD,EAAAqC,SACArC,EAAAsC,aACAtC,EAAAqC,OAAA,SAAAE,EAAAL,EAAAM,GACA,IAAAC,EAAAC,KACAC,WAAA,WACAH,GAAAxC,EAAA4C,WAAA7B,EACAwB,EAAAxB,EAAA0B,EAAAG,UAAAV,EAAAM,KAEAD,EAAAE,EAAAH,aAAA,OAAAJ,OAIKlC,EAAA4C,WAAA7B,IACLf,EAAAqC,OAAA,SAAAE,EAAAL,EAAAM,GACA,IAAAC,EAAAC,KACAC,WAAA,WACAJ,EAAAxB,EAAA0B,EAAAG,UAAAV,EAAAM,UASG5C,EAAAC,QACHD,EAAAC,QAAAkB,EAEAhB,EAAAgB,gBA1GA,CA4GChB,UAID8C,EAAAC,OAAA5C,UAAA6C,SAMAC,GAMAC,kBAAA,EAMAC,SAAAC,IAMAC,UAAAD,IAMAE,SAAA,EAMAC,UAAA,EAOAC,WAAAC,EAOAC,YAAAD,EASAhB,QAAA,GAOAkB,SAAA,OAQAC,YAAA,IAUAC,WAAA,KAUAC,KAAA,KASAC,QAAA,KASAC,MAAA,MAGAC,EAAA,cAOA,SAAAC,EAAAC,GACA,OAAAF,EAAAG,KAAAD,GAyBA,IAAAE,EAAAC,OAAAD,aAuBA,IACAE,EADAvE,OACAuE,KAmCA,SAAAC,EAAA/C,GACA,IAAAgD,EAAA,IAAAC,SAAAjD,GACAkD,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EAGA,SAAAL,EAAAM,SAAA,UAAAN,EAAAM,SAAA,GAIA,IAHA,IAAA/C,EAAAyC,EAAAO,WACAC,EAAA,EAEAA,EAAAjD,GAAA,CACA,SAAAyC,EAAAM,SAAAE,IAAA,MAAAR,EAAAM,SAAAE,EAAA,IACAJ,EAAAI,EACA,MAGAA,GAAA,EAIA,GAAAJ,EAAA,CACA,IACAK,EAAAL,EAAA,GAEA,YA3EA,SAAAJ,EAAAU,EAAAnD,GACA,IAAAoD,EAAA,GACAzD,OAAA,EAIA,IAFAK,GAAAmD,EAEAxD,EAAAwD,EAAiBxD,EAAAK,EAAYL,GAAA,EAC7ByD,GAAAf,EAAAI,EAAAM,SAAApD,IAGA,OAAAyD,EAiEAC,CAAAZ,EAHAI,EAAA,EAGA,IACA,IAAAS,EAAAb,EAAAc,UAAAL,GAIA,KAFAN,EAAA,QAAAU,IAEA,QAAAA,IACA,KAAAb,EAAAc,UAAAL,EAAA,EAAAN,GAAA,CACA,IAAAY,EAAAf,EAAAgB,UAAAP,EAAA,EAAAN,GAEAY,GAAA,IACAV,EAAAI,EAAAM,KAOA,GAAAV,EAAA,CACA,IAAAY,EAAAjB,EAAAc,UAAAT,EAAAF,GACAe,OAAA,EACAhE,OAAA,EAEA,IAAAA,EAAA,EAAeA,EAAA+D,EAAa/D,GAAA,EAG5B,GAFAgE,EAAAb,EAAA,GAAAnD,EAAA,EAEA,MAAA8C,EAAAc,UAAAI,EAAAf,GAAA,CAEAe,GAAA,EAGAhB,EAAAF,EAAAc,UAAAI,EAAAf,GAGAH,EAAAmB,UAAAD,EAAA,EAAAf,GACA,OAKA,OAAAD,EA6DA,IAAAkB,EAAA,wBASA,SAAAC,EAAA3B,GACA,IAAA4B,EAAAC,UAAAhE,OAAA,QAAAyB,IAAAuC,UAAA,GAAAA,UAAA,QAEA,OAAAH,EAAAzB,KAAAD,GAAA8B,KAAAC,MAAA/B,EAAA4B,KAAA5B,EAGA,IAAAgC,EAAA,SAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,sCAIAC,EAAA,WACA,SAAAC,EAAAC,EAAAC,GACA,QAAA/E,EAAA,EAAmBA,EAAA+E,EAAA1E,OAAkBL,IAAA,CACrC,IAAAgF,EAAAD,EAAA/E,GACAgF,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACA/D,OAAAgE,eAAAN,EAAAE,EAAAK,IAAAL,IAIA,gBAAAN,EAAAY,EAAAC,GAGA,OAFAD,GAAAT,EAAAH,EAAAlG,UAAA8G,GACAC,GAAAV,EAAAH,EAAAa,GACAb,GAdA,GAkBAc,EAAApE,OAAAqE,QAAA,SAAAX,GACA,QAAA9E,EAAA,EAAiBA,EAAAqE,UAAAhE,OAAsBL,IAAA,CACvC,IAAA0F,EAAArB,UAAArE,GAEA,QAAAqF,KAAAK,EACAtE,OAAA5C,UAAAmH,eAAAC,KAAAF,EAAAL,KACAP,EAAAO,GAAAK,EAAAL,IAKA,OAAAP,GAGAe,EAAAxH,OACAyH,EAAAD,EAAAtG,YACAwG,EAAAF,EAAAE,WAEAC,EAAA3H,OAAA2H,KAAA3H,OAAA4H,UACAC,EAAA,SA0RAC,EAnRA,WAMA,SAAAC,EAAAC,EAAAC,GACA9B,EAAAxD,KAAAoF,GAEApF,KAAAuF,OAAA,KAEAF,GACArF,KAAAwF,SAAAH,EAAAC,GAoQA,OAxPA1B,EAAAwB,IACAf,IAAA,WACA7C,MAAA,SAAA6D,EAAAC,GACA,IAAAG,EAAAzF,KAEA0F,EAAA,IAAAC,MAQA,OANAL,EAAAd,KAA2BlE,EAAAgF,GAE3BR,IACAQ,EAAA/E,kBAAA,GAGA,IAAAqF,QAAA,SAAAC,EAAAC,GACA,IAlbAC,EAkbAV,aAjbA3H,MAAA,kBAAAyC,EAAAyE,KAAAmB,GAibA,CAlbA,IAAAA,EAubA/E,EAAAqE,EAAA7F,KAEA,GAAA+B,EAAAP,GAKA,GAAAgE,GAAAD,GAKA,GAAAC,IAAAM,EAAA/E,iBACAsF,GACAG,IAAAhB,EAAAiB,gBAAAZ,UAES,GAAAN,EAAA,CACT,IAAAmB,EAAA,IAAAnB,EACAxE,EAAA+E,EAAA/E,kBAAA,eAAAS,EAEAkF,EAAAC,OAAA,SAAAC,GACA,IACAb,EADAa,EAAAtC,OACAyB,OAGAM,EAAAtF,EAAAiE,GACAwB,IA9RA,SAAAlH,EAAAkC,GACA,IAAAqF,EAAA,IAAAvI,WAAAgB,GACAwH,EAAA,GAGA,sBAAAD,EAAAE,QACAF,EAAAE,QAAA,SAAA/E,GACA8E,GAAA5E,EAAAF,UAMA,IAHA,IAAAnC,EAAAgH,EAAAhH,OAGAL,EAAA,EAAmBA,EAAAK,EAAYL,GAAA,EAC/BsH,GAAA5E,EAAA2E,EAAArH,IAIA,cAAAgC,EAAA,WAAgCY,EAAA0E,GA4QhCE,CAAAjB,EAAAvE,IA3LA,SAAAgB,GACA,IAAAyE,EAAA,EACAC,EAAA,EACAC,EAAA,EAEA,OAAA3E,GAEA,OACA0E,GAAA,EACA,MAGA,OACAD,GAAA,IACA,MAGA,OACAE,GAAA,EACA,MAGA,OACAF,EAAA,GACAE,GAAA,EACA,MAGA,OACAF,EAAA,GACA,MAGA,OACAA,EAAA,GACAC,GAAA,EACA,MAGA,OACAD,GAAA,GAMA,OACAA,SACAC,SACAC,UA2IaC,CAAA/E,EAAA0D,MACbS,IAAAT,KAGAW,EAAAW,QAAA,WACAf,EAAA,IAAA3G,MAAA,gDAEA+G,EAAAY,QAAA,WACAhB,EAAA,IAAA3G,MAAA,+CAGAoB,EACA2F,EAAAa,kBAAA1B,GAEAa,EAAAc,cAAA3B,SAjCAS,EAAA,IAAA3G,MAAA,iEALA2G,EAAA,IAAA3G,MAAA,kEAPA2G,EAAA,IAAA3G,MAAA,wDAgDO8H,KAAA,SAAAX,GACP,WAAAV,QAAA,SAAAC,EAAAC,GACAJ,EAAAS,OAAA,WACA,OAAAN,EAAArB,KAAsC8B,GACtCY,aAAAxB,EAAAwB,aACAC,cAAAzB,EAAAyB,kBAGAzB,EAAAmB,QAAA,WACAf,EAAA,IAAA3G,MAAA,gCAEAuG,EAAAoB,QAAA,WACAhB,EAAA,IAAA3G,MAAA,+BAEAuG,EAAA0B,IAAA/B,EAAAgC,KACA3B,EAAA4B,IAAAhB,EAAAN,QAEOiB,KAAA,SAAAM,GACP,IAAAL,EAAAK,EAAAL,aACAC,EAAAI,EAAAJ,cACAK,EAAAD,EAAAd,OACAA,OAAA3F,IAAA0G,EAAA,EAAAA,EACAC,EAAAF,EAAAb,OACAA,OAAA5F,IAAA2G,EAAA,EAAAA,EACAC,EAAAH,EAAAZ,OACAA,OAAA7F,IAAA4G,EAAA,EAAAA,EACA,WAAA9B,QAAA,SAAAC,GACA,IAAA8B,EAAAC,SAAAC,cAAA,UACAC,EAAAH,EAAAI,WAAA,MACAC,EAAAd,EAAAC,EACA3G,EAAA8C,KAAA2E,IAAA3C,EAAA9E,SAAA,IAAAC,IACAC,EAAA4C,KAAA2E,IAAA3C,EAAA5E,UAAA,IAAAD,IACAE,EAAA2C,KAAA2E,IAAA3C,EAAA3E,SAAA,MACAC,EAAA0C,KAAA2E,IAAA3C,EAAA1E,UAAA,MACAC,EAAAqG,EACAnG,EAAAoG,EA0BA,GAxBA3G,EAAAC,KAAAC,EAAAD,IACAC,EAAAsH,EAAAxH,EACAE,EAAAF,EAAAwH,EAEAxH,EAAAE,EAAAsH,EAEWxH,EAAAC,IACXC,EAAAF,EAAAwH,EACWtH,EAAAD,MACXD,EAAAE,EAAAsH,GAGArH,EAAA,GAAAC,EAAA,EACAA,EAAAoH,EAAArH,EACAC,EAAAD,EAAAqH,EAEArH,EAAAC,EAAAoH,EAEWrH,EAAA,EACXC,EAAAD,EAAAqH,EACWpH,EAAA,IACXD,EAAAC,EAAAoH,GAGA1C,EAAAzE,MAAA,EAIAE,GAFAF,EADAyE,EACAzE,OAEAmH,OACW,GAAA1C,EAAAvE,OAAA,GAIXF,GAFAE,EADAuE,EACAvE,QAEAiH,EAMA,IAAAE,IAHArH,EAAAyC,KAAA6E,IAAA7E,KAAA2E,IAAApH,EAAAF,GAAAH,IAGA,EACA4H,IAHArH,EAAAuC,KAAA6E,IAAA7E,KAAA2E,IAAAlH,EAAAH,GAAAF,IAGA,EACA2H,EAAAxH,EACAyH,EAAAvH,EAEA,GAAAuC,KAAAiF,IAAA9B,GAAA,SACA,IAAA+B,GACA3H,MAAAE,EACAA,OAAAF,GAEAA,EAAA2H,EAAA3H,MACAE,EAAAyH,EAAAzH,OAGA4G,EAAA9G,MAAAsC,EAAAtC,GACA8G,EAAA5G,OAAAoC,EAAApC,GAEAQ,EAAA+D,EAAAtE,YACAsE,EAAAtE,SAAAqE,EAAA7F,MAGA,IAAAiJ,EAAA,cAGApD,EAAAtH,KAAAuH,EAAArE,aAAA,cAAAqE,EAAAtE,WACAyH,EAAA,OACAnD,EAAAtE,SAAA,cAIA8G,EAAAY,UAAAD,EACAX,EAAAa,SAAA,IAAA9H,EAAAE,GACA+G,EAAAc,OACAd,EAAAe,UAAAhI,EAAA,EAAAE,EAAA,GACA+G,EAAArB,SAAAnD,KAAAwF,GAAA,KACAhB,EAAAiB,MAAArC,EAAAC,GAEArB,EAAApE,YACAoE,EAAApE,WAAA0D,KAAAa,EAAAqC,EAAAH,GAGAG,EAAAkB,UAAAtD,EAAApC,KAAA2F,MAAA9F,EAAA+E,IAAA5E,KAAA2F,MAAA9F,EAAAiF,IAAA9E,KAAA2F,MAAA9F,EAAAkF,IAAA/E,KAAA2F,MAAA9F,EAAAmF,KAEAhD,EAAAnE,MACAmE,EAAAnE,KAAAyD,KAAAa,EAAAqC,EAAAH,GAGAG,EAAAoB,UAEA,IAAAC,EAAA,SAAA5D,GACAM,GACAqB,eACAC,gBACA5B,YAIAoC,EAAAhI,OACAgI,EAAAhI,OAAAwJ,EAAA7D,EAAAtE,SAAAsE,EAAAxF,SAEAqJ,EAAAnM,EAAA2K,EAAAzH,UAAAoF,EAAAtE,SAAAsE,EAAAxF,eAGOmH,KAAA,SAAAmC,GACP,IAAAlC,EAAAkC,EAAAlC,aACAC,EAAAiC,EAAAjC,cACA5B,EAAA6D,EAAA7D,OAMA,GAJAP,IAAAM,EAAA/E,kBACAyE,EAAAqE,gBAAA3D,EAAA4B,KAGA/B,EAEA,GAAAA,EAAAxH,KAAAsH,EAAAtH,MAAAuH,EAAAtE,WAAAqE,EAAA7F,QAAA8F,EAAAzE,MAAAqG,GAAA5B,EAAAvE,OAAAoG,GAAA7B,EAAA3E,SAAAuG,GAAA5B,EAAA1E,UAAAuG,GACA5B,EAAAF,MACW,CACX,IAAAiE,EAAA,IAAAC,KAEAhE,EAAAiE,aAAAF,EAAAG,UACAlE,EAAAmE,iBAAAJ,EACA/D,EAAA8B,KAAAhC,EAAAgC,KAGA9B,EAAA8B,MAAA9B,EAAA/F,OAAA6F,EAAA7F,OACA+F,EAAA8B,KAAA9B,EAAA8B,KAAAsC,QAAAzE,EAlgBA,SAAA1D,GACA,IAAAoI,IAAAvG,UAAAhE,OAAA,QAAAyB,IAAAuC,UAAA,KAAAA,UAAA,GAEAwG,EAAAtI,EAAAC,KAAAsI,OAAA,MAUA,MARA,SAAAD,IACAA,EAAA,OAGAA,GAAAD,IACAC,EAAA,IAAAA,GAGAA,EAqfAE,CAAAxE,EAAA/F,aAKA+F,EAAAF,EASA,OANAI,EAAAF,SAEAD,EAAAlE,SACAkE,EAAAlE,QAAAwD,KAAAa,EAAAF,GAGAK,QAAAC,QAAAN,KACOyE,MAAA,SAAAC,GACP,IAAA3E,EAAAjE,MACA,MAAA4I,EAGA3E,EAAAjE,MAAAuD,KAAAa,EAAAwE,SAIA7E,EAhRA,MCjfAiC,KAAA,GACA6C,YACAC,YAAAC,EAAA,EACAC,WAAAC,EAAA,GAEAvG,SACAuC,KAPA,WAQA,OACAiE,YACAC,UAAA,KAGAC,SACAC,SAAAC,OACAvK,OAAAwK,EAAA,EAAAxK,EACAyK,MAAA,SAAAC,GAAA,OAAAA,EAAAC,MAAAC,KAAAH,OACAI,OAAA,SAAAH,GAAA,OAAAA,EAAAC,MAAAC,KAAAC,QACAC,QAAA,SAAAJ,GAAA,OAAAA,EAAAC,MAAAC,KAAAR,cAIAW,QAtBA,WAuBAnL,KAAAoL,QAEAC,QAzBA,aA2BAC,SACAF,KADA,WAEA,QAAApM,EAAA,EAAAA,EAAA,EAAAA,IACAgB,KAAAuK,SAAAgB,MACAvF,IAAA,GACAX,KAAA,QAIAmG,SATA,aAWAC,SAXA,WAWA,IAAAhG,EAAAzF,KACAA,KAAA0L,OAAAC,OAAA3L,KAAA4L,YAAAC,eACAX,QAAAlL,KAAAwK,UACAsB,OAAA9L,KAAAuK,WAEA,IAKAwB,EALAC,GACAf,OAAAjL,KAAAiL,OACAJ,MAAA7K,KAAA6K,MACAoB,KAAAjM,KAAAwK,UACAsB,QACAC,EAAA,GACAtG,EAAA8E,SAAAhE,QAAA,SAAA3I,GAAA,OAAAA,EAAAoI,MAAA+F,GAAAnO,EAAAoI,IAAA,OACA+F,IAGA/L,KAAAkM,MAAAlB,KAAAhL,KAAAmM,MAAAC,aAAApM,KAAAqM,IAAAC,UAAAN,IAAA/E,KAAA,SAAA8E,GACA,MAAAA,EAAAQ,KAMAC,MAAA,QALA/G,EAAAgH,QAAAlB,MACAmB,KAAA,kBAOAC,UApCA,SAoCAtH,GAAA,IAAAuH,EAAA5M,KACA,WAAA6M,EAAAC,EAAA,SAAAjH,EAAAC,GACA,IAAAX,EAAAE,GACAvF,QAAA,GACAU,SAAA,IACAS,YAAA,IACAG,QAAA,SAAAmE,GACA,IAAAwH,EAAA,IAAAC,SACAD,EAAAtN,OAAA,aACAsN,EAAAtN,OAAA,SAAA8F,IAAA8B,MACAuF,EAAAV,MAAAlB,KAAA4B,EAAAT,MAAAc,WAAAF,GAAA9F,KAAA,SAAA8E,GACAlG,EAAAkG,KACA/B,MAAA,SAAAC,GACAuC,MAAA,aAGAnL,MAdA,SAcAzD,GACAsP,QAAAC,IAAAvP,EAAAwP,SACAtH,EAAAlI,SAKAyP,YA3DA,SA2DAzP,EAAAyH,EAAAiI,GACAA,EAAAjI,OACArF,KAAA2M,UAAAtH,GAAA4B,KAAA,SAAA8E,GACA,MAAAA,EAAAQ,KACAe,EAAAtH,IAAA+F,EAAAzF,KAEAkG,MAAA,YAEAxC,MAAA,WACAwC,MAAA,aAGAe,gBAvEA,SAuEAD,EAAAE,GACAF,EAAAjI,KAAA,GACAiI,EAAAtH,IAAA,MC5HAyH,GADiBC,OAFjB,WAA0B,IAAAC,EAAA3N,KAAa4N,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,WAAqBE,aAAaC,WAAA,UAAqBH,EAAA,aAAkBI,OAAOC,MAAA,QAAcL,EAAA,eAAoBI,OAAOE,KAAA,OAAAC,GAAA,KAAuBD,KAAA,SAAaN,EAAA,aAAkBI,OAAOI,KAAA,QAAcC,IAAKC,MAAA,SAAAC,GAAyBd,EAAAlB,QAAAiC,IAAA,QAAqB,GAAAf,EAAAgB,GAAA,KAAAb,EAAA,aAAkCI,OAAOE,KAAA,SAAeG,IAAKC,MAAAb,EAAAlC,UAAqB2C,KAAA,UAAcT,EAAAgB,GAAA,YAAAhB,EAAAgB,GAAA,KAAAb,EAAA,YAAgDI,OAAOU,YAAA,UAAApP,KAAA,WAAAqP,KAAA,KAAqDC,OAAQtN,MAAAmM,EAAA,UAAA9N,SAAA,SAAAkP,GAA+CpB,EAAAnD,UAAAuE,GAAkBC,WAAA,eAAyBrB,EAAAgB,GAAA,KAAAb,EAAA,WAA4BmB,YAAA,cAAwBtB,EAAAuB,GAAAvB,EAAA,kBAAAL,EAAA6B,GAA8C,OAAArB,EAAA,eAA0BI,OAAO5G,IAAAgG,EAAAtH,KAAeuI,IAAKa,KAAA,SAAAxR,EAAAyH,GAAyB,OAAAsI,EAAAN,YAAAzP,EAAAyH,EAAAiI,IAAuC+B,OAAA,SAAAZ,GAA2Bd,EAAAJ,gBAAAD,EAAA6B,WAAsC,QAEr4BG,oBCEjB,IAcAC,EAdAC,EAAA,OAcAC,CACAC,EACAjC,GATA,EAXA,SAAAkC,GACAH,EAAA,QACAA,EAAA,SAaA,kBAEA,MAUAI,EAAA,QAAAL,EAAA","file":"static/js/11.1de515f2512f193f39ef.js","sourcesContent":["/*!\n * Image Compressor v1.1.4\n * https://xkeshi.github.io/image-compressor\n *\n * Copyright 2017-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-06-20T07:28:41.051Z\n */\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar canvasToBlob = createCommonjsModule(function (module) {\n(function (window) {\n\n  var CanvasPrototype =\n    window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n  var hasBlobConstructor =\n    window.Blob &&\n    (function () {\n      try {\n        return Boolean(new Blob())\n      } catch (e) {\n        return false\n      }\n    })();\n  var hasArrayBufferViewSupport =\n    hasBlobConstructor &&\n    window.Uint8Array &&\n    (function () {\n      try {\n        return new Blob([new Uint8Array(100)]).size === 100\n      } catch (e) {\n        return false\n      }\n    })();\n  var BlobBuilder =\n    window.BlobBuilder ||\n    window.WebKitBlobBuilder ||\n    window.MozBlobBuilder ||\n    window.MSBlobBuilder;\n  var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n  var dataURLtoBlob =\n    (hasBlobConstructor || BlobBuilder) &&\n    window.atob &&\n    window.ArrayBuffer &&\n    window.Uint8Array &&\n    function (dataURI) {\n      var matches,\n        mediaType,\n        isBase64,\n        dataString,\n        byteString,\n        arrayBuffer,\n        intArray,\n        i,\n        bb;\n      // Parse the dataURI components as per RFC 2397\n      matches = dataURI.match(dataURIPattern);\n      if (!matches) {\n        throw new Error('invalid data URI')\n      }\n      // Default to text/plain;charset=US-ASCII\n      mediaType = matches[2]\n        ? matches[1]\n        : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n      isBase64 = !!matches[4];\n      dataString = dataURI.slice(matches[0].length);\n      if (isBase64) {\n        // Convert base64 to raw binary data held in a string:\n        byteString = atob(dataString);\n      } else {\n        // Convert base64/URLEncoded data component to raw binary:\n        byteString = decodeURIComponent(dataString);\n      }\n      // Write the bytes of the string to an ArrayBuffer:\n      arrayBuffer = new ArrayBuffer(byteString.length);\n      intArray = new Uint8Array(arrayBuffer);\n      for (i = 0; i < byteString.length; i += 1) {\n        intArray[i] = byteString.charCodeAt(i);\n      }\n      // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n      if (hasBlobConstructor) {\n        return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n          type: mediaType\n        })\n      }\n      bb = new BlobBuilder();\n      bb.append(arrayBuffer);\n      return bb.getBlob(mediaType)\n    };\n  if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n    if (CanvasPrototype.mozGetAsFile) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        var self = this;\n        setTimeout(function () {\n          if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n            callback(dataURLtoBlob(self.toDataURL(type, quality)));\n          } else {\n            callback(self.mozGetAsFile('blob', type));\n          }\n        });\n      };\n    } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n      CanvasPrototype.toBlob = function (callback, type, quality) {\n        var self = this;\n        setTimeout(function () {\n          callback(dataURLtoBlob(self.toDataURL(type, quality)));\n        });\n      };\n    }\n  }\n  if (typeof undefined === 'function' && undefined.amd) {\n    undefined(function () {\n      return dataURLtoBlob\n    });\n  } else if (module.exports) {\n    module.exports = dataURLtoBlob;\n  } else {\n    window.dataURLtoBlob = dataURLtoBlob;\n  }\n})(window);\n});\n\n/* globals Blob */\nvar toString = Object.prototype.toString;\n\nvar isBlob = function (x) {\n\treturn x instanceof Blob || toString.call(x) === '[object Blob]';\n};\n\nvar DEFAULTS = {\n  /**\n   * Indicates if read the image's Exif Orientation information,\n   * and then rotate or flip the image automatically.\n   * @type {boolean}\n   */\n  checkOrientation: true,\n\n  /**\n   * The max width of the output image.\n   * @type {number}\n   */\n  maxWidth: Infinity,\n\n  /**\n   * The max height of the output image.\n   * @type {number}\n   */\n  maxHeight: Infinity,\n\n  /**\n   * The min width of the output image.\n   * @type {number}\n   */\n  minWidth: 0,\n\n  /**\n   * The min height of the output image.\n   * @type {number}\n   */\n  minHeight: 0,\n\n  /**\n   * The width of the output image.\n   * If not specified, the natural width of the source image will be used.\n   * @type {number}\n   */\n  width: undefined,\n\n  /**\n   * The height of the output image.\n   * If not specified, the natural height of the source image will be used.\n   * @type {number}\n   */\n  height: undefined,\n\n  /**\n   * The quality of the output image.\n   * It must be a number between `0` and `1`,\n   * and only available for `image/jpeg` and `image/webp` images.\n   * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n   * @type {number}\n   */\n  quality: 0.8,\n\n  /**\n   * The mime type of the output image.\n   * By default, the original mime type of the source image file will be used.\n   * @type {string}\n   */\n  mimeType: 'auto',\n\n  /**\n   * PNG files over this value (5M by default) will be converted to JPEGs.\n   * To disable this, just set the value to `Infinity`.\n   * Check out {@link https://github.com/xkeshi/image-compressor/issues/2 #2}.\n   * @type {number}\n   */\n  convertSize: 5000000,\n\n  /**\n   * The hook function to execute before draw the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) { context.fillStyle = '#fff' }\n   */\n  beforeDraw: null,\n\n  /**\n   * The hook function to execute after drew the image into the canvas for compression.\n   * @type {Function}\n   * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n   * @param {HTMLCanvasElement} canvas - The canvas for compression.\n   * @example\n   * function (context, canvas) { context.filter = grayscale(100%) }\n   */\n  drew: null,\n\n  /**\n   * The hook function to execute when success to compress the image.\n   * @type {Function}\n   * @param {File} file - The compressed image File object.\n   * @example\n   * function (file) { console.log(file) }\n   */\n  success: null,\n\n  /**\n   * The hook function to execute when fail to compress the image.\n   * @type {Function}\n   * @param {Error} err - An Error object.\n   * @example\n   * function (err) { console.log(err.message) }\n   */\n  error: null\n};\n\nvar REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n\n/**\n * Check if the given value is a mime type of image.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n */\nfunction isImageType(value) {\n  return REGEXP_IMAGE_TYPE.test(value);\n}\n\n/**\n * Convert image type to extension.\n * @param {string} value - The image type to convert.\n * @param {boolean} [includeDot=true] - Include a leading dot or not.\n * @returns {boolean} Returns the image extension.\n */\nfunction imageTypeToExtension(value) {\n  var includeDot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  var extension = isImageType(value) ? value.substr(6) : '';\n\n  if (extension === 'jpeg') {\n    extension = 'jpg';\n  }\n\n  if (extension && includeDot) {\n    extension = '.' + extension;\n  }\n\n  return extension;\n}\n\nvar fromCharCode = String.fromCharCode;\n\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i = void 0;\n\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nvar _window = window,\n    btoa = _window.btoa;\n\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\n\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var uint8 = new Uint8Array(arrayBuffer);\n  var data = '';\n\n  // TypedArray.prototype.forEach is not supported in some browsers as IE.\n  if (typeof uint8.forEach === 'function') {\n    uint8.forEach(function (value) {\n      data += fromCharCode(value);\n    });\n  } else {\n    var length = uint8.length;\n\n\n    for (var i = 0; i < length; i += 1) {\n      data += fromCharCode(uint8[i]);\n    }\n  }\n\n  return 'data:' + mimeType + ';base64,' + btoa(data);\n}\n\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\nfunction getOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation = void 0;\n  var littleEndian = void 0;\n  var app1Start = void 0;\n  var ifdStart = void 0;\n\n  // Only handle JPEG image (start by 0xFFD8)\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    var length = dataView.byteLength;\n    var offset = 2;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n\n      offset += 1;\n    }\n  }\n\n  if (app1Start) {\n    var exifIDCode = app1Start + 4;\n    var tiffOffset = app1Start + 10;\n\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      var endianness = dataView.getUint16(tiffOffset);\n\n      littleEndian = endianness === 0x4949;\n\n      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n    }\n  }\n\n  if (ifdStart) {\n    var _length = dataView.getUint16(ifdStart, littleEndian);\n    var _offset = void 0;\n    var i = void 0;\n\n    for (i = 0; i < _length; i += 1) {\n      _offset = ifdStart + i * 12 + 2;\n\n      if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n          // 8 is the offset of the current tag's value\n          _offset += 8;\n\n          // Get the original orientation value\n          orientation = dataView.getUint16(_offset, littleEndian);\n\n          // Override the orientation with its default value\n          dataView.setUint16(_offset, 1, littleEndian);\n          break;\n        }\n    }\n  }\n\n  return orientation;\n}\n\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n\n    // Rotate left 180°\n    case 3:\n      rotate = -180;\n      break;\n\n    // Flip vertical\n    case 4:\n      scaleY = -1;\n      break;\n\n    // Flip vertical and rotate right 90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n\n    // Rotate right 90°\n    case 6:\n      rotate = 90;\n      break;\n\n    // Flip horizontal and rotate right 90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n\n    // Rotate left 90°\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/i;\n\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _window$1 = window,\n    ArrayBuffer$1 = _window$1.ArrayBuffer,\n    FileReader = _window$1.FileReader;\n\nvar URL = window.URL || window.webkitURL;\nvar REGEXP_EXTENSION = /\\.\\w+$/;\n\n/**\n * Creates a new image compressor.\n * @class\n */\n\nvar ImageCompressor = function () {\n  /**\n   * The constructor of ImageCompressor.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   */\n  function ImageCompressor(file, options) {\n    classCallCheck(this, ImageCompressor);\n\n    this.result = null;\n\n    if (file) {\n      this.compress(file, options);\n    }\n  }\n\n  /**\n   * The main compress method.\n   * @param {File|Blob} file - The target image file for compressing.\n   * @param {Object} [options] - The options for compressing.\n   * @returns {Promise} - A Promise instance.\n   */\n\n\n  createClass(ImageCompressor, [{\n    key: 'compress',\n    value: function compress(file, options) {\n      var _this = this;\n\n      var image = new Image();\n\n      options = _extends({}, DEFAULTS, options);\n\n      if (!ArrayBuffer$1) {\n        options.checkOrientation = false;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!isBlob(file)) {\n          reject(new Error('The first argument must be a File or Blob object.'));\n          return;\n        }\n\n        var mimeType = file.type;\n\n        if (!isImageType(mimeType)) {\n          reject(new Error('The first argument must be an image File or Blob object.'));\n          return;\n        }\n\n        if (!URL && !FileReader) {\n          reject(new Error('The current browser does not support image compression.'));\n          return;\n        }\n\n        if (URL && !options.checkOrientation) {\n          resolve({\n            url: URL.createObjectURL(file)\n          });\n        } else if (FileReader) {\n          var reader = new FileReader();\n          var checkOrientation = options.checkOrientation && mimeType === 'image/jpeg';\n\n          reader.onload = function (_ref) {\n            var target = _ref.target;\n            var result = target.result;\n\n\n            resolve(checkOrientation ? _extends({\n              url: arrayBufferToDataURL(result, mimeType)\n            }, parseOrientation(getOrientation(result))) : {\n              url: result\n            });\n          };\n          reader.onabort = function () {\n            reject(new Error('Aborted to load the image with FileReader.'));\n          };\n          reader.onerror = function () {\n            reject(new Error('Failed to load the image with FileReader.'));\n          };\n\n          if (checkOrientation) {\n            reader.readAsArrayBuffer(file);\n          } else {\n            reader.readAsDataURL(file);\n          }\n        }\n      }).then(function (data) {\n        return new Promise(function (resolve, reject) {\n          image.onload = function () {\n            return resolve(_extends({}, data, {\n              naturalWidth: image.naturalWidth,\n              naturalHeight: image.naturalHeight\n            }));\n          };\n          image.onabort = function () {\n            reject(new Error('Aborted to load the image.'));\n          };\n          image.onerror = function () {\n            reject(new Error('Failed to load the image.'));\n          };\n          image.alt = file.name;\n          image.src = data.url;\n        });\n      }).then(function (_ref2) {\n        var naturalWidth = _ref2.naturalWidth,\n            naturalHeight = _ref2.naturalHeight,\n            _ref2$rotate = _ref2.rotate,\n            rotate = _ref2$rotate === undefined ? 0 : _ref2$rotate,\n            _ref2$scaleX = _ref2.scaleX,\n            scaleX = _ref2$scaleX === undefined ? 1 : _ref2$scaleX,\n            _ref2$scaleY = _ref2.scaleY,\n            scaleY = _ref2$scaleY === undefined ? 1 : _ref2$scaleY;\n        return new Promise(function (resolve) {\n          var canvas = document.createElement('canvas');\n          var context = canvas.getContext('2d');\n          var aspectRatio = naturalWidth / naturalHeight;\n          var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n          var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n          var minWidth = Math.max(options.minWidth, 0) || 0;\n          var minHeight = Math.max(options.minHeight, 0) || 0;\n          var width = naturalWidth;\n          var height = naturalHeight;\n\n          if (maxWidth < Infinity && maxHeight < Infinity) {\n            if (maxHeight * aspectRatio > maxWidth) {\n              maxHeight = maxWidth / aspectRatio;\n            } else {\n              maxWidth = maxHeight * aspectRatio;\n            }\n          } else if (maxWidth < Infinity) {\n            maxHeight = maxWidth / aspectRatio;\n          } else if (maxHeight < Infinity) {\n            maxWidth = maxHeight * aspectRatio;\n          }\n\n          if (minWidth > 0 && minHeight > 0) {\n            if (minHeight * aspectRatio > minWidth) {\n              minHeight = minWidth / aspectRatio;\n            } else {\n              minWidth = minHeight * aspectRatio;\n            }\n          } else if (minWidth > 0) {\n            minHeight = minWidth / aspectRatio;\n          } else if (minHeight > 0) {\n            minWidth = minHeight * aspectRatio;\n          }\n\n          if (options.width > 0) {\n            var _options = options;\n            width = _options.width;\n\n            height = width / aspectRatio;\n          } else if (options.height > 0) {\n            var _options2 = options;\n            height = _options2.height;\n\n            width = height * aspectRatio;\n          }\n\n          width = Math.min(Math.max(width, minWidth), maxWidth);\n          height = Math.min(Math.max(height, minHeight), maxHeight);\n\n          var destX = -width / 2;\n          var destY = -height / 2;\n          var destWidth = width;\n          var destHeight = height;\n\n          if (Math.abs(rotate) % 180 === 90) {\n            var _width$height = {\n              width: height,\n              height: width\n            };\n            width = _width$height.width;\n            height = _width$height.height;\n          }\n\n          canvas.width = normalizeDecimalNumber(width);\n          canvas.height = normalizeDecimalNumber(height);\n\n          if (!isImageType(options.mimeType)) {\n            options.mimeType = file.type;\n          }\n\n          var defaultFillStyle = 'transparent';\n\n          // Converts PNG files over the `convertSize` to JPEGs.\n          if (file.size > options.convertSize && options.mimeType === 'image/png') {\n            defaultFillStyle = '#fff';\n            options.mimeType = 'image/jpeg';\n          }\n\n          // Override the default fill color (#000, black)\n          context.fillStyle = defaultFillStyle;\n          context.fillRect(0, 0, width, height);\n          context.save();\n          context.translate(width / 2, height / 2);\n          context.rotate(rotate * Math.PI / 180);\n          context.scale(scaleX, scaleY);\n\n          if (options.beforeDraw) {\n            options.beforeDraw.call(_this, context, canvas);\n          }\n\n          context.drawImage(image, Math.floor(normalizeDecimalNumber(destX)), Math.floor(normalizeDecimalNumber(destY)), Math.floor(normalizeDecimalNumber(destWidth)), Math.floor(normalizeDecimalNumber(destHeight)));\n\n          if (options.drew) {\n            options.drew.call(_this, context, canvas);\n          }\n\n          context.restore();\n\n          var done = function done(result) {\n            resolve({\n              naturalWidth: naturalWidth,\n              naturalHeight: naturalHeight,\n              result: result\n            });\n          };\n\n          if (canvas.toBlob) {\n            canvas.toBlob(done, options.mimeType, options.quality);\n          } else {\n            done(canvasToBlob(canvas.toDataURL(options.mimeType, options.quality)));\n          }\n        });\n      }).then(function (_ref3) {\n        var naturalWidth = _ref3.naturalWidth,\n            naturalHeight = _ref3.naturalHeight,\n            result = _ref3.result;\n\n        if (URL && !options.checkOrientation) {\n          URL.revokeObjectURL(image.src);\n        }\n\n        if (result) {\n          // Returns original file if the result is greater than it and without size related options\n          if (result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight)) {\n            result = file;\n          } else {\n            var date = new Date();\n\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name;\n\n            // Convert the extension to match its type\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // Returns original file if the result is null in some cases.\n          result = file;\n        }\n\n        _this.result = result;\n\n        if (options.success) {\n          options.success.call(_this, result);\n        }\n\n        return Promise.resolve(result);\n      }).catch(function (err) {\n        if (!options.error) {\n          throw err;\n        }\n\n        options.error.call(_this, err);\n      });\n    }\n  }]);\n  return ImageCompressor;\n}();\n\nexport default ImageCompressor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/image-compressor.js/dist/image-compressor.esm.js\n// module id = null\n// module chunks = ","<!-- by 添少 -->\r\n<template>\r\n  <section style=\"background: #fff;\">\r\n    <mt-header title=\"发帖\">\r\n      <router-link to=\"/\" slot=\"left\">\r\n        <mt-button icon=\"back\" @click=\"$router.go(-1)\"></mt-button>\r\n      </router-link>\r\n      <mt-button @click=\"handNext\" slot=\"right\">发送</mt-button>\r\n    </mt-header>\r\n    <mt-field placeholder=\"请输入帖子内容\" type=\"textarea\" rows=\"4\" v-model=\"myContent\"></mt-field>\r\n    <section class=\"m-uploads\">\r\n      <template v-for=\"(item,$index) in myPreimg\">\r\n        <file-image2\r\n          :src=\"item.url\"\r\n          @load=\"(e,file)=>handLoadImg(e,file,item)\"\r\n          @delete=\"handDeleteImage(item,$index)\">\r\n        </file-image2>\r\n      </template>\r\n    </section>\r\n  </section>\r\n</template>\r\n<script>\r\n  import { mapState } from 'vuex'\r\n  import FixedLayout from '@/components/fixed-layout'\r\n  import FileImage2 from '@/components/file-image2.vue'\r\n  import ImageCompressor from 'image-compressor.js'\r\n\r\n  export default {\r\n    name: '',\r\n    components: {\r\n      FixedLayout,\r\n      FileImage2,\r\n    },\r\n    props: {},\r\n    data () {\r\n      return {\r\n        myPreimg: [],\r\n        myContent: '',\r\n      }\r\n    },\r\n    watch: {},\r\n    computed: {\r\n      ...mapState({\r\n        tagId: state => state.write.post.tagId,\r\n        clubId: state => state.write.post.clubId,\r\n        content: state => state.write.post.myContent,\r\n        // preimg: state => state.write.post.preimg,\r\n      })\r\n    },\r\n    created () {\r\n      this.init()\r\n    },\r\n    mounted () {\r\n    },\r\n    methods: {\r\n      init () {\r\n        for (let i = 0; i < 3; i++) {\r\n          this.myPreimg.push({\r\n            url: '',\r\n            file: null,\r\n          })\r\n        }\r\n      },\r\n      initData () {\r\n      },\r\n      handNext () {\r\n        this.$store.commit(this.$actionType.set_post_data, {\r\n          content: this.myContent,\r\n          preimg: this.myPreimg\r\n        })\r\n        let params = {\r\n          clubId: this.clubId,\r\n          tagId: this.tagId,\r\n          cont: this.myContent,\r\n          preimg: (() => {\r\n            let res = ''\r\n            this.myPreimg.forEach(e => e.url && (res += `${e.url}#`))\r\n            return res\r\n          })()\r\n        }\r\n        this.$http.post(this.$port.POST_DISCUSS, this.$qs.stringify(params)).then(res => {\r\n          if (res.code === 200) {\r\n            this.$router.push({\r\n              path: '/forumPage'\r\n            })\r\n            return\r\n          }\r\n          alert('发帖失败')\r\n        })\r\n      },\r\n      uploadImg (file) {\r\n        return new Promise((resolve, reject) => {\r\n          new ImageCompressor(file, {\r\n            quality: 0.8,\r\n            maxWidth: 750,\r\n            convertSize: 2000000,\r\n            success: (result) => {\r\n              const formData = new FormData()\r\n              formData.append('imgType', 1)\r\n              formData.append('upload', result, result.name)\r\n              this.$http.post(this.$port.UPLOAD_IMG, formData).then(res => {\r\n                resolve(res)\r\n              }).catch(err => {\r\n                alert('图片上传失败')\r\n              })\r\n            },\r\n            error (e) {\r\n              console.log(e.message)\r\n              reject(e)\r\n            },\r\n          })\r\n        })\r\n      },\r\n      handLoadImg (e, file, item) {\r\n        item.file = file\r\n        this.uploadImg(file).then(res => {\r\n          if (res.code === 200) {\r\n            item.url = res.data\r\n          } else {\r\n            alert('图片上传失败')\r\n          }\r\n        }).catch(() => {\r\n          alert('图片压缩失败')\r\n        })\r\n      },\r\n      handDeleteImage (item, index) {\r\n        item.file = ''\r\n        item.url = ''\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style lang=\"scss\">\r\n\r\n</style>\r\n<style lang=\"scss\" scoped>\r\n  .fixed-layout {\r\n    background-color: #fff;\r\n  }\r\n\r\n  #editor {\r\n    font-size: 16px;\r\n  }\r\n\r\n  .m-uploads {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    > section {\r\n      margin-left: 10px;\r\n      margin-bottom: 10px;\r\n      position: relative;\r\n    }\r\n  }\r\n\r\n  .m-write {\r\n    margin-bottom: 10px;\r\n  }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/post/edit.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticStyle:{\"background\":\"#fff\"}},[_c('mt-header',{attrs:{\"title\":\"发帖\"}},[_c('router-link',{attrs:{\"slot\":\"left\",\"to\":\"/\"},slot:\"left\"},[_c('mt-button',{attrs:{\"icon\":\"back\"},on:{\"click\":function($event){_vm.$router.go(-1)}}})],1),_vm._v(\" \"),_c('mt-button',{attrs:{\"slot\":\"right\"},on:{\"click\":_vm.handNext},slot:\"right\"},[_vm._v(\"发送\")])],1),_vm._v(\" \"),_c('mt-field',{attrs:{\"placeholder\":\"请输入帖子内容\",\"type\":\"textarea\",\"rows\":\"4\"},model:{value:(_vm.myContent),callback:function ($$v) {_vm.myContent=$$v},expression:\"myContent\"}}),_vm._v(\" \"),_c('section',{staticClass:\"m-uploads\"},[_vm._l((_vm.myPreimg),function(item,$index){return [_c('file-image2',{attrs:{\"src\":item.url},on:{\"load\":function (e,file){ return _vm.handLoadImg(e,file,item); },\"delete\":function($event){_vm.handDeleteImage(item,$index)}}})]})],2)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b211d14e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/post/edit.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b211d14e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./edit.vue\")\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b211d14e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=1!./edit.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./edit.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./edit.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b211d14e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./edit.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-b211d14e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/post/edit.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}